name: Backend CI/CD (No Artifact)

on:
  push:
    branches:
      - main

env:
  PROJECT_NAME: EV_Dealer_Management_System
  DOTNET_VERSION: 9.0.x
  EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  EC2_HOST: ${{ secrets.EC2_HOST_PUBLIC }}
  EC2_USER: ${{ secrets.EC2_USER }}

jobs:
  build-and-deploy:
    name: Build and Deploy ASP.NET Core
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project (Release)
        run: dotnet build --configuration Release --no-restore

      - name: Publish project (framework-dependent)
        run: dotnet publish -c Release -o ./publish

      - name: Zip publish folder
        run: zip -r publish.zip ./publish

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ env.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ env.EC2_HOST }}" >> ~/.ssh/known_hosts

      - name: Upload and deploy to EC2
        run: |
          scp publish.zip ${{ env.EC2_USER }}@${{ env.EC2_HOST }}:/home/${{ env.EC2_USER }}/
          ssh ${{ env.EC2_USER }}@${{ env.EC2_HOST }} <<'SSH'
            set -euo pipefail
            PROJECT_NAME="EV_Dealer_Management_System"
            DEPLOY_DIR="/var/www/${PROJECT_NAME}"
            SERVICE="kestrel-${PROJECT_NAME}.service"

            # Chuẩn bị
            sudo mkdir -p "${DEPLOY_DIR}"
            (sudo dnf -y install unzip >/dev/null 2>&1 || sudo yum -y install unzip >/dev/null 2>&1 || true)

            # Đảm bảo .NET 9 runtime (vì publish framework-dependent)
            if command -v dotnet >/dev/null 2>&1; then
              dotnet --list-runtimes | grep -q "Microsoft.NETCore.App 9" || (sudo dnf -y install dotnet-runtime-9.0 || sudo yum -y install dotnet-runtime-9.0 || true)
            else
              (sudo dnf -y install dotnet-runtime-9.0 || sudo yum -y install dotnet-runtime-9.0 || true)
            fi

            # Giải nén & deploy
            rm -rf ~/deploy_temp && mkdir -p ~/deploy_temp
            unzip -o ~/publish.zip -d ~/deploy_temp >/dev/null

            sudo systemctl stop "${SERVICE}" || true
            sudo rm -rf "${DEPLOY_DIR:?}"/*
            sudo cp -r ~/deploy_temp/* "${DEPLOY_DIR}/"
            sudo chown -R ${USER}:${USER} "${DEPLOY_DIR}"

            sudo systemctl start "${SERVICE}"

            # Dọn dẹp
            rm -rf ~/deploy_temp ~/publish.zip
